1. username = "dhruv"
   <h1>Hello {username}</h1>    // {username} called evaluated expression. only accepts the final outcome

2. Babel is responsible for injecting the  react . (Read more about it)

3. Why need hooks? 
   Ans:- (problem in ui updation) imagine we have a 6-7 counter variables in a page , if we use simple js we have to manually select each element by using getElementId or querySelector,
         but using hooks in react we can change the value of counter variable at once. Eg using UseState() which changes the value of counter variables all over the page.

4. React Fiber :- read article [https://github.com/acdlite/react-fiber-architecture] 

5.We use Link in replace of a tag because in a tag whole page is refresh/reload and whole dom tree again generated

6. outlet in react-router-dom

7. loader in react-router-dom


8. prop drilling

9. When we create app with  create react app then in.env file we use REACT_APP_NAME =
   and can we use by process.env.REACT_APP_NAME

   When using with vite the in .env VITE_NAME and can access with import.meta.env.VITE_NAME.

10. Redux = store
  Step 1: make a store.js 

    code:-  
   
   import {configureStore} from '@reduxjs/toolkit'
   const store = configureStore({
    reducer:{

    }
    })

    export default store;     

  Step2:- Create Slice :- eg AuthSlice

  Code:- 

import {createSlice} from '@reduxjs/toolkit';

//this slice is used to track the user authentication i.e user is authenticated or not

const initialState = {
    //create initial state depending upon the use case
    status: false,
    userData: null,
}



const authSlice = createSlice({
    name:     ,
    initialState,
    reducers: {
        // indiviual methods/functions and give two values state & action  
    }
})

// authSlice.actions means in authSlice we have reducers and in reducers we have actions i.e the methods
export const {/* export the actions/methods */ } = authSlice.actions;

export default authSlice.reducer



11. React forwardRef hook  Example = In a login form we have a separate input field component and this same componet is using in username,password field .
                      so in a login page we need to have access of the state this input field, 
                      Therefor we need to give/pass  the reference inside the page . 
                      In this type of senario we use forward reference hook.
 


   
